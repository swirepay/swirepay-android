# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
  MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
  GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  GNUPGHOME: /tmp/.gnupg
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Create Key File
        run: |
          mkdir -p ${GNUPGHOME}
          echo "$GPG_PRIVATE_KEY" > private.key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
       
      - name: Import GPG Key
        run: gpg --import --batch private.key

      - name: export secret key ring file
        run: |
          echo -e "use-agent\npinentry-mode loopback" > ${GNUPGHOME}/gpg.conf
          echo -e "allow-loopback-pinentry" > ${GNUPGHOME}/gpg-agent.conf
          echo RELOADAGENT | gpg-connect-agent
          gpg --passphrase ${GPG_PASSPHRASE} --batch --export-secret-keys > ${GNUPGHOME}/secring.gpg
        
      - name: Signing
        run: gradle signArchives -Psigning.keyId=${GPG_KEYNAME} -Psigning.password=${GPG_PASSPHRASE}
